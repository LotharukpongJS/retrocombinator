.DEFAULT_GOAL := all

# Library files exposed to C++ and R
LIB_DIR = src/
# Functions exposed only to C++
IN_DIR  = cpp/
# Object files generated by compilation
OUT_DIR = obj/
$(OUT_DIR):
	mkdir -p $(OUT_DIR)

CC = g++
CCFLAGS = -I./$(LIB_DIR) -I./$(IN_DIR)

_DEPS = constants.h				\
		exception.h				\
		sequence.h				
DEPS := $(addprefix $(LIB_DIR), $(_DEPS))

_LIBS = sequence.o				\
		rand_maths.o			
LIBS := $(addprefix $(OUT_DIR), $(_LIBS))

_OBJS = test_main.o
OBJS := $(addprefix $(OUT_DIR), $(_OBJS))

_TEST = test_all.o
TEST := $(addprefix $(OUT_DIR), $(_TEST))

TARGET = rcombinator
TEST_TARGET = test_all

$(OUT_DIR)%.o: $(IN_DIR)%.cpp $(DEPS) | $(OUT_DIR)
	$(CC) -c $(IN_DIR)$*.cpp -o $(OUT_DIR)$*.o $(CCFLAGS)

$(OUT_DIR)%.o: $(LIB_DIR)%.cpp $(DEPS) | $(OUT_DIR)
	$(CC) -c $(LIB_DIR)$*.cpp -o $(OUT_DIR)$*.o $(CCFLAGS)

$(TARGET): $(OBJS) $(LIBS)
	$(CC) -o $@ $^ $(CCFLAGS)

$(TEST_TARGET): $(TEST) $(LIBS)
	$(CC) -o $@ $^ $(CCFLAGS)

.PHONY: target
target: $(TARGET)

.PHONY: test
test: $(TEST_TARGET)

.PHONY: all
all: target test

.PHONY: clean
clean:
	rm -f $(OUT_DIR)*.o $(TARGET)
