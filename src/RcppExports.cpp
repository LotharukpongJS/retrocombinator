// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// test_main
double test_main();
RcppExport SEXP _rcombinator_test_main() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(test_main());
    return rcpp_result_gen;
END_RCPP
}
// test_other
double test_other();
RcppExport SEXP _rcombinator_test_other() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(test_other());
    return rcpp_result_gen;
END_RCPP
}
// test_new
double test_new();
RcppExport SEXP _rcombinator_test_new() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(test_new());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rcombinator_test_main", (DL_FUNC) &_rcombinator_test_main, 0},
    {"_rcombinator_test_other", (DL_FUNC) &_rcombinator_test_other, 0},
    {"_rcombinator_test_new", (DL_FUNC) &_rcombinator_test_new, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_rcombinator(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
